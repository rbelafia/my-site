name: Pre-release
on:
  push:
    branches:
      - release/**
jobs:
  test-back:
    runs-on: ubuntu-latest
    container: maven:3.8.1-openjdk-17-slim

    services:
      db:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: dbuser
          POSTGRES_PASSWORD: dbpass
          POSTGRES_DB: articles
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Test with Maven
        env:
          DB_USERNAME: dbuser
          DB_PASSWORD: dbpass
          DB_URL: jdbc:postgresql://db:5432/articles
        run: cd my-site-back && mvn test
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: Test
          path: my-site-back/target/surefire-reports

  build-front:
    needs: test-back
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: cd my-site-front && npm i
      - name: Build front
        run: cd my-site-front && npm run build
      - name: Upload front
        uses: actions/upload-artifact@v3
        with:
          name: front
          path: my-site-front/dist/my-site-front

  build-back:
    needs: [test-back, build-front]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Download front
        uses: actions/download-artifact@v3
        with:
          name: front
          path: front
      - name: Ls
        run: |
          ls
      - name: Move front to resources
        run: cp -a front/. my-site-back/src/main/resources/META-INF/resources
      - name: Build with Maven
        run: cd my-site-back && mvn clean package -Dmaven.test.skip=true
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: my-site-back/target/*.jar

  release:
    needs: build-back
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Pre-release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: true