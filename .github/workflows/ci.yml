name: CI
on: [push]
jobs:
  build-back:
    runs-on: ubuntu-latest
    container: maven:3.8.1-openjdk-17-slim

    services:
      db:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: dbuser
          POSTGRES_PASSWORD: dbpass
          POSTGRES_DB: articles
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Build with Maven
        env:
          DB_USERNAME: dbuser
          DB_PASSWORD: dbpass
          DB_URL: jdbc:postgresql://db:5432/articles
        run: cd my-site-back && mvn clean package -Dmaven.test.skip=true
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: my-site-back/target/*.jar

  build-front:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - name: Install dependencies
        run: cd my-site-front && npm ci
      - name: Build front
        run: cd my-site-front && npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Front
          path: my-site-front/dist/my-site-front
  
  test-back:
    needs: build-back
    runs-on: ubuntu-latest
    container: maven:3.8.1-openjdk-17-slim

    services:
      db:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: dbuser
          POSTGRES_PASSWORD: dbpass
          POSTGRES_DB: articles
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Test with Maven
        env:
          DB_USERNAME: dbuser
          DB_PASSWORD: dbpass
          DB_URL: jdbc:postgresql://db:5432/articles
        run: cd my-site-back && mvn test
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Test
          path: my-site-back/target/surefire-reports
